params {
  input = "$launchDir/input"
  samplesheetFileName = "samplesheet.csv"
  genome = "$launchDir/input/genome.fasta"
  outputDir = "$launchDir/output"
  datasetType = "TODO" // [originsOfReplication, spliceSites, chipSeq]
  //experimentType = "histonemod" // [histonemod, tfbinding, mnase, faire, dnase]
  inputFileType = "[fastq/fasta]"
  profileSetName = "Profile Set Name"
  gffFileName = "output.gff"
  saveAlignments = false
  saveCoverage = false
  hasPairedReads = true
  removePCRDuplicates = false
}
process {
  withName: bowtie2 {
    ext.args = ""
  }
}
includeConfig "$baseDir/conf/docker.config"

profiles {
  test_chipseq_histonemod {
    params {
      datasetType = "chipSeq"
      experimentType = "histonemod"
      input = "$baseDir/data/chipseq_histonemod"
      genome = "$baseDir/data/chipseq_histonemod/genome.fasta"
      inputFileType = "fastq"
      saveCoverage = true
      hasPairedReads = true
      removePCRDuplicates = true
    }

  }
  test_chipseq_mnase {
    params {
      datasetType = "chipSeq"
      experimentType = "mnase"
      input = "$baseDir/data/chipseq_mnase"
      genome = "$baseDir/data/chipseq_mnase/genome.fasta"
      inputFileType = "fastq"
      saveCoverage = true
      hasPairedReads = false
      removePCRDuplicates = true

    }
  }
  test_origins {
    params {
      datasetType = "originsOfReplication"
      input = "$baseDir/data/origins"
      genome = "$baseDir/data/origins/genome.fasta"
      inputFileType = "fastq"
      saveCoverage = true
      hasPairedReads = true
      removePCRDuplicates = true
    }
  }
  test_splicesites {
    params {
      datasetType = "spliceSites"
      input = "$baseDir/data/splicesites"
      genome = "$baseDir/data/splicesites/genome.fasta"
      inputFileType = "fasta"
      saveCoverage = false
      saveAlignments = true
      hasPairedReads = false
      removePCRDuplicates = false
    }


    params {
      
    }
  }
}
